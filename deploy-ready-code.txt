# BMV Quiz App Deploy-Ready Code

This file contains instructions for preparing the code for deployment to different platforms.

## GitHub Pages or Static Hosting

For static hosting without a backend, you can run:

```bash
# Build the frontend
npm run build

# The output will be in the dist/ directory
# Upload the contents of the dist directory to your static hosting
```

## Vercel Deployment (Frontend + Backend)

1. Push your code to GitHub
2. Connect Vercel to your GitHub repository
3. Set the following:
   - Build Command: `npm run build`
   - Output Directory: `dist`
   - Install Command: `npm install`

4. Add environment variables if needed:
   - DATABASE_URL (if using a PostgreSQL database)
   - NODE_ENV=production

5. Deploy!

## Heroku Deployment

1. Create a Heroku account
2. Install Heroku CLI
3. Run the following commands:

```bash
# Login to Heroku
heroku login

# Create a new Heroku app
heroku create your-app-name

# Add PostgreSQL addon (optional)
heroku addons:create heroku-postgresql:hobby-dev

# Push to Heroku
git push heroku main

# Open your app
heroku open
```

## Railway Deployment

1. Create a Railway account
2. Link your GitHub repository
3. Configure the following:
   - Start Command: `npm start`
   - Build Command: `npm run build`

4. Add PostgreSQL plugin if needed
5. Deploy!

## Docker Deployment

1. Build the Docker image:

```bash
docker build -t bmv-quiz-app .
```

2. Run the container:

```bash
docker run -p 5000:5000 -e DATABASE_URL=your_db_url bmv-quiz-app
```

## One-Click Deployment Script

Save this as `deploy.sh` and make it executable with `chmod +x deploy.sh`:

```bash
#!/bin/bash

echo "BMV Quiz App - One-Click Deployment"
echo "===================================="

# Install dependencies
echo "Installing dependencies..."
npm install

# Build the app
echo "Building the application..."
npm run build

# Database migration if needed
if [ ! -z "$DATABASE_URL" ]; then
  echo "Running database migrations..."
  npm run db:push
fi

# Start the application
echo "Starting the application..."
npm start

echo "Deployment complete! Your app should be running now."
```

## Environment Setup

Make sure to create a `.env` file with the following variables:

```
DATABASE_URL=your_postgresql_url_here
PORT=5000
NODE_ENV=production
```

## Testing Your Deployment

After deploying, verify these endpoints work:

1. Main application: `/`
2. Health check: `/api/health`
3. API endpoints: `/api/quizzes`

For any issues, check the logs of your deployment platform and ensure all environment variables are correctly set.